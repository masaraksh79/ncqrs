include omnetpp.ini

[Config FindOptAlphaGamma1] # 108000 (20x60x90)
description = "Optimal alpha gamma for static pehom"
P2MP.bs.schedMethod 	= 2
P2MP.numSSs 			= 5
P2MP.tdmaSF 			= 15
P2MP.bs.maxChunks 		= 15
P2MP.bs.retxChunks 		= 10
P2MP.bs.retxSlots 		= 10
P2MP.chanType = 0
P2MP.pPER = "0.2 0.2 0.2 0.2 0.2"  	
P2MP.bs.rl_q_gamma = ${0 .. 0.95 step 0.05}  #20
P2MP.bs.rl_q_alfa = ${0.0000005 .. 0.0003 step 0.000005} #60
P2MP.bs.rewardReduce 	= -10
P2MP.bs.rewardViolate 	= -100
P2MP.bs.rewardSlots	= -0.02
seed-set = ${seed=1..90}	

[Config FindOptAlphaGamma2] # 85500 (50x19x90)
description = "Optimal rewards for static pehom"
P2MP.bs.schedMethod 	= 2
P2MP.numSSs 			= 5
P2MP.tdmaSF 			= 15
P2MP.bs.maxChunks 		= 15
P2MP.bs.retxChunks 		= 10
P2MP.bs.retxSlots 		= 10
P2MP.chanType = 0
P2MP.pPER = "0.2 0.2 0.2 0.2 0.2"  	
P2MP.bs.rl_q_gamma = 0.95	# taken from FindOptAlphaGamma1 & 4
P2MP.bs.rl_q_alfa = 0.00005 	# --||--
P2MP.bs.rewardSlots	= ${-0.01..-1 step -0.02} #50
P2MP.bs.rewardReduce 	= -10   
P2MP.bs.rewardViolate = ${-30 .. -120 step -5} #19
seed-set = ${seed=1..90}	

[Config FindOptAlphaGamma3] # 18090 (201x90)
description = "Optimal r_n (1D) for static pehom"
P2MP.bs.schedMethod 	= 2
P2MP.numSSs 			= 5
P2MP.tdmaSF 			= 15
P2MP.bs.maxChunks 		= 15
P2MP.bs.retxChunks 		= 10
P2MP.bs.retxSlots 		= 10
P2MP.chanType = 0
P2MP.pPER = "0.2 0.2 0.2 0.2 0.2"  	
P2MP.bs.rl_q_gamma = 0.1	# taken from FindOptAlphaGamma1
P2MP.bs.rl_q_alfa = 0.00005 	# --||--
P2MP.bs.rewardReduce 	= -10   
P2MP.bs.rewardViolate = -70
P2MP.bs.rewardSlots		= ${-0.2..0 step 0.001} #201
seed-set = ${seed=1..90}	
	
[Config FindOptAlphaGamma4] # 108000 (20x60x90)
description = "Optimal alpha gamma for static pehet"
P2MP.bs.schedMethod 	= 2
P2MP.numSSs 			= 5
P2MP.tdmaSF 			= 15
P2MP.bs.maxChunks 		= 15
P2MP.bs.retxChunks 		= 10
P2MP.bs.retxSlots 		= 10
P2MP.chanType = 0
P2MP.pPER = "0.1 0.15 0.2 0.25 0.3"  	
P2MP.bs.rl_q_gamma = ${0 .. 0.95 step 0.05}  #20
P2MP.bs.rl_q_alfa = ${0.0000005 .. 0.0003 step 0.000005} #60
P2MP.bs.rewardReduce 	= -10
P2MP.bs.rewardViolate 	= -70
P2MP.bs.rewardSlots		= -0.02
seed-set = ${seed=1..90}	

[Config FindOptAlphaGamma5] # 85500 (50x19x90)
description = "Optimal rewards for static pehet"
P2MP.bs.schedMethod 	= 2
P2MP.numSSs 			= 5
P2MP.tdmaSF 			= 15
P2MP.bs.maxChunks 		= 15
P2MP.bs.retxChunks 		= 10
P2MP.bs.retxSlots 		= 10
P2MP.chanType = 0
P2MP.pPER = "0.1 0.15 0.2 0.25 0.3"  	
P2MP.bs.rl_q_gamma = 0.95	# taken from FindOptAlphaGamma4
P2MP.bs.rl_q_alfa = 0.00005 # --||--
P2MP.bs.rewardSlots		= ${-0.01..-1 step -0.02} #50
P2MP.bs.rewardReduce 	= -10   
P2MP.bs.rewardViolate = ${-30 .. -120 step -5} #19
seed-set = ${seed=1..90}

[Config FindOptAlphaGamma6] # 90000 (20x30x150)
description = "Optimal alpha gamma for GE pehom"
P2MP.bs.schedMethod 	= 2
P2MP.numSSs 			= 5
P2MP.tdmaSF 			= 15
P2MP.bs.maxChunks 		= 15
P2MP.bs.retxChunks 		= 10
P2MP.bs.retxSlots 		= 10
P2MP.chanType = 1
P2MP.ss[*].B   = 0.5
P2MP.ss[*].EH1 = 50
P2MP.ss[*].eB = 1
P2MP.pPER = "0.2 0.2 0.2 0.2 0.2"  	
P2MP.bs.rl_q_gamma = ${0 .. 0.95 step 0.05}  #20
P2MP.bs.rl_q_alfa = ${0.0000005 .. 0.0003 step 0.00001} #30
P2MP.bs.rewardReduce 	= -10
P2MP.bs.rewardViolate 	= -70
P2MP.bs.rewardSlots		= -0.02
seed-set = ${seed=1..150}	

[Config FindOptAlphaGamma7] # 90000 (20x30x150)
description = "Optimal alpha gamma for GE pehet"
P2MP.bs.schedMethod 	= 2
P2MP.numSSs 			= 5
P2MP.tdmaSF 			= 15
P2MP.bs.maxChunks 		= 15
P2MP.bs.retxChunks 		= 10
P2MP.bs.retxSlots 		= 10
P2MP.chanType = 1
P2MP.ss[*].B   = 0.5
P2MP.ss[*].EH1 = 50
P2MP.ss[*].eB = 1
P2MP.pPER = "0.1 0.15 0.2 0.25 0.3"  	
P2MP.bs.rl_q_gamma = ${0 .. 0.95 step 0.05}  #20
P2MP.bs.rl_q_alfa = ${0.0000005 .. 0.0003 step 0.00001} #30
P2MP.bs.rewardReduce 	= -10
P2MP.bs.rewardViolate 	= -70
P2MP.bs.rewardSlots		= -0.02
seed-set = ${seed=1..150}	

[Config FindOptAlphaGamma9] # 142500 (50x19x150)
description = "Optimal rewards for GE pehet"
P2MP.bs.schedMethod 	= 2
P2MP.numSSs 			= 5
P2MP.tdmaSF 			= 15
P2MP.bs.maxChunks 		= 15
P2MP.bs.retxChunks 		= 10
P2MP.bs.retxSlots 		= 10
P2MP.chanType = 0
P2MP.pPER = "0.1 0.15 0.2 0.25 0.3"  	
P2MP.bs.rl_q_gamma = 0.95	# taken from FindOptAlphaGamma7 & 6
P2MP.bs.rl_q_alfa = 0.0001
P2MP.bs.rewardSlots		= ${-0.01..-1 step -0.02} #50
P2MP.bs.rewardReduce 	= -10   
P2MP.bs.rewardViolate = ${-30 .. -120 step -5} #19
seed-set = ${seed=1..150}

[Config FindOptAlphaGamma10] # 142500 (50x19x150)
description = "Optimal rewards for GE pehom"
P2MP.bs.schedMethod 	= 2
P2MP.numSSs 			= 5
P2MP.tdmaSF 			= 15
P2MP.bs.maxChunks 		= 15
P2MP.bs.retxChunks 		= 10
P2MP.bs.retxSlots 		= 10
P2MP.chanType = 0
P2MP.pPER = "0.2 0.2 0.2 0.2 0.2"  	
P2MP.bs.rl_q_gamma = 0.95	# taken from FindOptAlphaGamma7 & 6
P2MP.bs.rl_q_alfa = 0.0001 	# --||--
P2MP.bs.rewardSlots	= ${-0.01..-1 step -0.02} #50
P2MP.bs.rewardReduce 	= -10   
P2MP.bs.rewardViolate = ${-30 .. -120 step -5} #19
seed-set = ${seed=1..150}

# SARSA experimental section (copied from exp.1) and changed range of alpha down

[Config FindOptAlphaGamma8] # 78000 (20x30x130)
description = "10 retx slots for 5 units (opt SARSA)"
P2MP.bs.schedMethod 	= 0
P2MP.numSSs 			= 5
P2MP.tdmaSF 			= 15
P2MP.bs.maxChunks 		= 15
P2MP.bs.retxChunks 		= 10
P2MP.bs.retxSlots 		= 10
P2MP.chanType = 0
P2MP.pPER = "0.2 0.2 0.2 0.2 0.2"  	
P2MP.bs.rl_q_gamma = ${0 .. 0.95 step 0.05}  #20
P2MP.bs.rl_q_alfa = ${0.0000005 .. 0.0003 step 0.00001} #30
P2MP.bs.rewardReduce 	= -10
P2MP.bs.rewardViolate 	= -100
P2MP.bs.rewardSlots	= -0.02
seed-set = ${seed=1..130}	
